C----------------------------------------------------------------------------------
C
C Subroutine Name:  write_netCDF_tidalforcing_ROMS
C
C Directory:  /gpfs/d/marine/save/wx21az/COMF_NCEP/sorc/nos_reformatfor.fd/oceans
C
C Purpose:    This subroutine is used to generated netCDF tidal forcing file for ROMS from  
C             ADCIRC EC2001 database generated by Jesse Feyen in CSDL.
C
C Current contact:   Aijun Zhang
C         Org:  NOS/CO-OPS/OD   Phone:  301-713-2890 ext. 127 
C                    aijun.zhang@Noaa.gov 
C Attributes:
C  Language:  Fortran
C  Computer:  DEW/MIST at NCEP  
C
C  Compile command:  
C
C Input Data files:
C
C
C Input Parameters:
C        GRIDFILE       : Model Grid file name of the OFS			   
C        xi_rho_len     : dimension size in x-direction/longitude
C        eta_rho_len    : dimension size in y-direction/latitude
C     tide_period_len   : number of tidal constituents
C     IYR               : year to compute node factor and equilibrium arguments
C     tide_period       : period of tide constituents in hours
C     tide_names        : Name of tide constituents
C     tide_Ephase       : tidal elevation phase angle in degrees
C     tide_Eamp         : tidal elveation amplitude in meters
C     tide_Cphase       : tidal current phase angle in degrees
C     tide_Cangle       : tidal current inclination angle in degrees 
C                         between semi-major axis and East
C     tide_Cmin         : minimum tidal current, ellipse semi-minor axis
C     tide_Cmax         : maximum tidal current, ellipse semi-major axis
C
C Output files: 
C   netcdf_file         : Output netCDF file name
C----------------------------------------------------------------------------------
     
      subroutine write_netCDF_tidalforcing_ROMS(GRIDFILE,
     & netcdf_file,ncid,imode,xi_rho_len,eta_rho_len,
     & tide_period_len,IYR,tide_period,tide_names,tide_Ephase,
     & tide_Eamp,tide_Cphase,tide_Cangle,tide_Cmin,tide_Cmax)

CC     xi_rho = IM in x-direction/longitude
CC     eta_rho = JM in y-dirrection/latitude
      include 'netcdf.inc'
      CHARACTER*80 TEXT,CNAME,netcdf_file,GRIDFILE
      INTEGER LEN,Tide_Reference_Time(4),intval(4),CORNER(4),COUNT(4)
      CHARACTER (LEN=10) BIG_BEN(3),CURRENT_TIME*20
      INTEGER DATE_TIME(8)
!! dimension lengths
      integer  xi_rho_len
      integer  xi_u_len
      integer  xi_v_len
      integer  eta_rho_len
      integer  eta_u_len
      integer  eta_v_len
      integer  tide_period_len

!* dimension ids
      integer  xi_rho_dim
      integer  xi_u_dim
      integer  xi_v_dim
      integer  eta_rho_dim
      integer  eta_u_dim
      integer  eta_v_dim
      integer  tide_period_dim
      integer  charlength_dim
!!* variable ids
      integer  tide_period_id
      integer  tide_names_id
      integer  tide_Ephase_id
      integer  tide_Eamp_id
      integer  tide_Cphase_id
      integer  tide_Cangle_id
      integer  tide_Cmin_id
      integer  tide_Cmax_id

* data variables
      character tide_names(tide_period_len)*10
      double precision  tide_period(tide_period_len)
      double precision  tide_Ephase(xi_rho_len, eta_rho_len, tide_period
     1_len)
      double precision  tide_Eamp(xi_rho_len, eta_rho_len, tide_period_l
     1en)
      double precision  tide_Cphase(xi_rho_len, eta_rho_len, tide_period
     1_len)
      double precision  tide_Cangle(xi_rho_len, eta_rho_len, tide_period
     1_len)
      double precision  tide_Cmin(xi_rho_len, eta_rho_len, tide_period_l
     1en)
      double precision  tide_Cmax(xi_rho_len, eta_rho_len, tide_period_l
     1en)
      character globalstr(9)*40

C save all dimention id and variable id for next call
!      save eta_rho_dim,eta_u_dim,eta_v_dim
!      save xi_rho_dim,xi_u_dim,xi_v_dim

!! variable ID
!      save    tide_period_id
!      save    tide_names_id
!      save    tide_Ephase_id
!      save    tide_Eamp_id
!      save    tide_Cphase_id
!      save    tide_Cangle_id
!      save    tide_Cmin_id
!      save    tide_Cmax_id

      xi_u_len=xi_rho_len-1
      xi_v_len=xi_rho_len
      eta_u_len=eta_rho_len
      eta_v_len=eta_rho_len-1


      CALL DATE_AND_TIME(BIG_BEN(1),BIG_BEN(2),BIG_BEN(3),DATE_TIME)
      WRITE(CURRENT_TIME,1)DATE_TIME(5),':',DATE_TIME(6),
     &DATE_TIME(2),'/',DATE_TIME(3),'/',DATE_TIME(1)
  !    IYY=DATE_TIME(1)
  !    IMON=DATE_TIME(2)
  !    IDD=DATE_TIME(3)
  !    IHH=DATE_TIME(5)
  !    IMIN=DATE_TIME(6)
  !    ISS=DATE_TIME(7)
1     format(I2.2,a1,I2.2,2x,I2.2,a1,i2.2,a1,I4)
!      write(*,*)'netcdf file=',trim(netcdf_file)
        iret=nf_create(trim(netcdf_file), NF_CLOBBER, ncid)
        if (iret .ne. NF_NOERR)stop 'netcdf'
        write(6,*)'open netcdf file: ',trim(netcdf_file)

c define dimensions
        iret=nf_def_dim(ncid,'eta_rho',eta_rho_len,eta_rho_dim)
        if (iret .ne. NF_NOERR)stop 'netcdf'
        write(6,*)'define eta_rho dimensions: '
        iret=nf_def_dim(ncid,'eta_u',eta_u_len, eta_u_dim)
        if (iret .ne. NF_NOERR)stop 'netcdf'
        write(6,*)'define eta_u dimensions: '
        iret=nf_def_dim(ncid,'eta_v',eta_v_len, eta_v_dim)
        if (iret .ne. NF_NOERR)stop 'netcdf'
        write(6,*)'define eta_v dimensions: '
        iret=nf_def_dim(ncid,'xi_rho',xi_rho_len, xi_rho_dim)
        if (iret .ne. NF_NOERR)stop 'netcdf'
        write(6,*)'define xi_rho dimensions: '
        iret=nf_def_dim(ncid,'xi_u',xi_u_len, xi_u_dim)
        if (iret .ne. NF_NOERR)stop 'netcdf'
        write(6,*)'define xi_u dimensions: '
        iret=nf_def_dim(ncid,'xi_v',xi_v_len, xi_v_dim)
        if (iret .ne. NF_NOERR)stop 'netcdf'
        write(6,*)'define xi_v dimensions: '
        iret = nf_def_dim(ncid, 'tide_period',tide_period_len,
     &	 tide_period_dim)
        iret = nf_def_dim(ncid, 'charlength', 10, charlength_dim)
        call check_err(iret)
        print *,'all dimensions are defined'
c define time associated variables
      intval(2) = tide_period_dim
      intval(1) = charlength_dim
      iret = nf_def_var(ncid,'tide_names',NF_CHAR,2,
     1 intval, tide_names_id)
       intval(1) = tide_period_dim
      iret = nf_def_var(ncid, 'tide_period', NF_DOUBLE, 1,
     1 intval, tide_period_id)
      call check_err(iret)
      intval(3) = tide_period_dim
      intval(2) = eta_rho_dim
      intval(1) = xi_rho_dim
      iret = nf_def_var(ncid, 'tide_Ephase', NF_DOUBLE, 3,
     1 intval, tide_Ephase_id)
      call check_err(iret)
      intval(3) = tide_period_dim
      intval(2) = eta_rho_dim
      intval(1) = xi_rho_dim
      iret = nf_def_var(ncid, 'tide_Eamp', NF_DOUBLE, 3, 
     1 intval, tide_Eamp_id)
      call check_err(iret)
      intval(3) = tide_period_dim
      intval(2) = eta_rho_dim
      intval(1) = xi_rho_dim
      iret = nf_def_var(ncid, 'tide_Cphase', NF_DOUBLE, 3,
     1 intval, tide_Cphase_id)
      call check_err(iret)
      intval(3) = tide_period_dim
      intval(2) = eta_rho_dim
      intval(1) = xi_rho_dim
      iret = nf_def_var(ncid, 'tide_Cangle', NF_DOUBLE, 3,
     1 intval, tide_Cangle_id)
      call check_err(iret)
      intval(3) = tide_period_dim
      intval(2) = eta_rho_dim
      intval(1) = xi_rho_dim
      iret = nf_def_var(ncid, 'tide_Cmin', NF_DOUBLE, 3, 
     1 intval, tide_Cmin_id)
      call check_err(iret)
      intval(3) = tide_period_dim
      intval(2) = eta_rho_dim
      intval(1) = xi_rho_dim
      iret = nf_def_var(ncid, 'tide_Cmax', NF_DOUBLE, 3, 
     1 intval, tide_Cmax_id)
      call check_err(iret)
* assign attributes
      iret = nf_put_att_text(ncid, tide_names_id, 'long_name'
     & , 21, 'Tide Constituent name')
!      iret = nf_put_att_int(ncid, tide_names_id,
!     & 'missing_value', NF_INT, 1,-1)
      iret = nf_put_att_text(ncid, tide_names_id, 'standard_name', 16,
     & 'tide_constituent')
      call check_err(iret)

      iret = nf_put_att_text(ncid, tide_period_id, 'long_name', 19, 'tid
     1e angular period')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_period_id, 'units', 5, 'hours')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_period_id, 'field', 19, 'tide_pe
     1riod, scalar')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Ephase_id, 'long_name', 27, 'tid
     1al elevation phase angle')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Ephase_id, 'units', 66, 'degrees
     1, time of maximum elevation with respect chosen time origin')
      call check_err(iret)
      
      iret = nf_put_att_text(ncid, tide_Ephase_id, 'field', 19, 'tide_Ep
     1hase, scalar')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Eamp_id, 'long_name', 25, 'tidal
     1 elevation amplitude')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Eamp_id, 'units', 5, 'meter')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Eamp_id, 'field', 17, 'tide_Eamp
     1, scalar')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Cphase_id, 'long_name', 25, 'tid
     1al current phase angle')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Cphase_id, 'units', 65, 'degrees
     1, time of maximum velocity with respect chosen time origin')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Cphase_id, 'field', 19, 'tide_Cp
     1hase, scalar')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Cangle_id, 'long_name', 31, 'tid
     1al current inclination angle')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Cangle_id, 'units', 40, 'degrees
     1 between semi-major axis and East')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Cangle_id, 'field', 19, 'tide_Ca
     1ngle, scalar')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Cmin_id, 'long_name', 46, 'minim
     1um tidal current, ellipse semi-minor axis')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Cmin_id, 'units', 14, 'meter sec
     1ond-1')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Cmin_id, 'field', 17, 'tide_Cmin
     1, scalar')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Cmax_id, 'long_name', 46, 'maxim
     1um tidal current, ellipse semi-major axis')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Cmax_id, 'units', 14, 'meter sec
     1ond-1')
      call check_err(iret)
      iret = nf_put_att_text(ncid, tide_Cmax_id, 'field', 17, 'tide_Cmax
     1, scalar')
      call check_err(iret)

C Global Attributes
      TEXT='ROMS tidal forcing netcdf file'
      LEN=LEN_TRIM(TEXT)
      iret=nf_put_att_text(ncid,NF_GLOBAL ,'type',
     &       LEN,TRIM(TEXT))
      TEXT='Tidal forcing harmonics (zeta, ubar and vbar) for NOS OFS'
      LEN=LEN_TRIM(TEXT)
      iret=nf_put_att_text(ncid, NF_GLOBAL,'title',
     &       LEN,TRIM(TEXT))
      TEXT='EC2001 ADCIRC Tidal Simulation netCDF FILE'
      
      LEN=LEN_TRIM(TEXT)
      iret=nf_put_att_text(ncid, NF_GLOBAL,'source',
     &       LEN,TRIM(TEXT))
      write(TEXT,'(a16,a20)')'created at time ',CURRENT_TIME
      LEN=LEN_TRIM(TEXT)
      iret=nf_put_att_text(ncid, NF_GLOBAL,'history',
     &       LEN,TRIM(TEXT))
      TEXT='ROMS model grid file is '//trim(GRIDFILE)
      LEN=LEN_TRIM(TEXT)
      iret=nf_put_att_text(ncid, NF_GLOBAL,'grid_file',
     &       LEN,TRIM(TEXT))
      
      WRITE(CURRENT_TIME,1)0,':',0,
     &1,'/',1,'/',IYR
       write(TEXT,'(a28,a20)')'Reference time for tides is ',
     &  CURRENT_TIME
      LEN=LEN_TRIM(TEXT)
      iret=nf_put_att_text(ncid, NF_GLOBAL,'Tide_reference_time',
     &       LEN,TRIM(TEXT))
  
      TEXT='Created by Aijun Zhang, OD/CO-OPS/NOS/NOAA'
      LEN=LEN_TRIM(TEXT)
      iret=nf_put_att_text(ncid, NF_GLOBAL,'reference',
     &       LEN,TRIM(TEXT))
     
      TEXT='File has all 37 harmonics and adjusted by nodal factors 
     &and equilibrium arguments'
      LEN=LEN_TRIM(TEXT)
      iret=nf_put_att_text(ncid, NF_GLOBAL,'details',
     & LEN,TRIM(TEXT) )
      call check_err(iret)

      TEXT='Created by nos_ofs_create_tidalforcing.f'
      LEN=LEN_TRIM(TEXT)
      
      iret=nf_put_att_text(ncid, NF_GLOBAL,'Program_Name',
     &  LEN,TRIM(TEXT))
      call check_err(iret)
      iret=nf_enddef(ncid)
* leave define mode
!!  end of variable definition

C write associate variables
      CORNER(1) = 1
      CORNER(2) = 1
      COUNT(1)=10
      COUNT(2)=tide_period_len
      iret=nf_put_vara_text(ncid,tide_names_id,CORNER,COUNT,tide_names)
      call check_err(iret)
      CORNER(1) = 1
      COUNT(1)=tide_period_len
      iret=nf_put_vara_real(ncid,tide_period_id,CORNER,COUNT,
     & tide_period)
      call check_err(iret)
C    write 3D fields the real array defined in netcdf is 3-D =(x,y,time)
	
         CORNER(1) = 1
         CORNER(2) = 1
         CORNER(3) = 1
         COUNT(1)=xi_rho_len
         COUNT(2)=eta_rho_len
         COUNT(3)=tide_period_len
        iret=nf_put_vara_real(ncid,tide_Ephase_id,CORNER,COUNT,
     &	tide_Ephase)

        iret=nf_put_vara_real(ncid,tide_Eamp_id,CORNER,COUNT,
     &	tide_Eamp)
        iret=nf_put_vara_real(ncid,tide_Cphase_id,CORNER,COUNT,
     &	tide_Cphase)

        iret=nf_put_vara_real(ncid,tide_Cangle_id,CORNER,COUNT,
     &	tide_Cangle)
        iret=nf_put_vara_real(ncid,tide_Cmin_id,CORNER,COUNT,
     &	tide_Cmin)
        iret=nf_put_vara_real(ncid,tide_Cmax_id,CORNER,COUNT,
     &	tide_Cmax)

        write(*,*)'The netCDF file is closed'
        iret=NF_CLOSE(ncid)

      return
      end

ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      
      subroutine check_err(iret)
      integer iret
      include 'netcdf.inc'
      if (iret .ne. NF_NOERR) then
      print *,'iret=',iret
      print *, nf_strerror(iret)
      stop
      endif
      return
      end
